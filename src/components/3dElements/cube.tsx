/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Izeck (https://sketchfab.com/Izeck)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/hex-cube-db133dc2e6e34270afa6b1a265c0424e
Title: Hex Cube
*/

import gsap from "gsap";
import { useGSAP } from "@gsap/react";
import React, { useRef, useState } from "react";
import { Float, useGLTF, useTexture } from "@react-three/drei";
import * as THREE from "three";

const Cube = ({ ...props }) => {
  const { nodes, materials } = useGLTF("/models/hex_cube.glb");

  const texture = useTexture("textures/cube.png");

  const cubeRef = useRef<THREE.Object3D | null>(null);
  const [hovered, setHovered] = useState(false);

  useGSAP(() => {
    if (cubeRef.current) {
      gsap
        .timeline({
          repeat: -1,
          repeatDelay: 0.5,
        })
        .to(cubeRef.current.rotation, {
          y: hovered ? "+=2" : `+=${Math.PI * 2}`,
          x: hovered ? "+=2" : `-=${Math.PI * 2}`,
          duration: 2.5,
          stagger: {
            each: 0.15,
          },
        });
    }
  });

  return (
    <Float floatIntensity={2}>
      <group
        position={[9, -4, 10]}
        rotation={[2.6, 0.8, -1.8]}
        dispose={null}
        {...props}
      >
        <mesh
          ref={cubeRef}
          castShadow
          receiveShadow
          geometry={(nodes.Object_2 as any).geometry}
          material={materials.Normal}
          onPointerEnter={() => setHovered(true)}
        >
          <meshMatcapMaterial matcap={texture} toneMapped={false} />
        </mesh>
      </group>
    </Float>
  );
};

useGLTF.preload("/models/hex_cube.glb");

export default Cube;
